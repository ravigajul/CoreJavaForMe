Table summarizing the important XPath syntax with their formulas:

| XPath Syntax                                   | Description                                                  |
| ---------------------------------------------- | ------------------------------------------------------------ |
| `//tagname`                                    | Selects all nodes with the name `tagname` anywhere in the document. |
| `//*`                                          | Selects all elements in the document.                        |
| `/tagname`                                     | Selects the root node with the name `tagname`.              |
| `/tagname/subtagname`                         | Selects a child node `subtagname` of the `tagname` node.    |
| `//tagname[@attribute='value']`               | Selects all nodes with the name `tagname` that have an attribute `attribute` with the value `value`. |
| `//tagname[position()=n]`                     | Selects the `n`th `tagname` element.                        |
| `//tagname[last()]`                           | Selects the last `tagname` element.                          |
| `//tagname[contains(@attribute, 'value')]`    | Selects all nodes with the name `tagname` where the attribute `attribute` contains the substring `value`. |
| `//tagname[starts-with(@attribute, 'value')]` | Selects all nodes with the name `tagname` where the attribute `attribute` starts with the substring `value`. |
| `//tagname[text()='value']`                   | Selects all nodes with the name `tagname` that have the exact text content `value`. |
| `//tagname[contains(text(), 'value')]`        | Selects all nodes with the name `tagname` that contain the substring `value` in their text content. |
| `//tagname[@attribute='value1' or @attribute='value2']` | Selects all nodes with the name `tagname` where the attribute `attribute` is either `value1` or `value2`. |
| `//tagname[@attribute='value1' and @attribute2='value2']` | Selects all nodes with the name `tagname` where `attribute` is `value1` and `attribute2` is `value2`. |
| `//tagname/..`                                 | Selects the parent of the `tagname` element.                 |

You can use these formulas to construct XPath expressions for navigating XML or HTML documents effectively.

Examples:

1. **XPath for `<div>` elements with class "container":**
   XPath: `//div[@class='container']`

2. **XPath for `<a>` elements with `href` starting with "https://":**
   XPath: `//a[starts-with(@href, 'https://')]`

3. **XPath for `<h2>` elements containing the text "Important News":**
   XPath: `//h2[contains(text(), 'Important News')]`

4. **XPath for the third `<li>` element in an ordered list `<ol>`:**
   XPath: `//ol/li[3]`

5. **XPath for the parent `<div>` element of an `<input>` element with `id` set to "username":**
   XPath: `//input[@id='username']/parent::div`

6. **XPath for `<img>` elements with the `alt` attribute:**
   XPath: `//img[@alt]`

7. **XPath for `<input>` elements with `type` set to "checkbox":**
   XPath: `//input[@type='checkbox']`

8. **XPath for `<a>` elements whose `href` attribute contains "example.com":**
   XPath: `//a[contains(@href, 'example.com')]`

9. **XPath for `<div>` elements with class "content" inside a `<section>` element with id "main":**
   XPath: `//section[@id='main']//div[@class='content']`

10. **XPath for `<span>` elements containing the text "Error" inside a `<div>` element with class "alert":**
    XPath: `//div[@class='alert']//span[contains(text(), 'Error')]`

11. **XPath for the second `<p>` element containing the text "Lorem ipsum dolor sit amet":**
    XPath: `//p[contains(text(), 'Lorem ipsum dolor sit amet')][2]`